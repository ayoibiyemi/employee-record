{"version":3,"sources":["Data.js","Form.js","App.js","index.js"],"names":["TableHeader","scope","TablebBody","props","rows","tableEmployees","map","employee","index","firstname","lastname","department","hiredate","onClick","tableOnDelete","value","id","className","Data","employees","onDelete","Form","onSubmit","onAddEmployee","htmlFor","type","name","firstName","onChange","onFirstNameInputChange","lastName","onLastNameInputChange","onDepartmentInputChange","hireDate","onHireDateInputChange","EMPLOYEES_RECORDS","localStorage","getItem","JSON","parse","App","useState","setEmployees","setFirstName","setLastName","setDepartment","setHireDate","useEffect","setItem","stringify","event","parseInt","target","identity","find","undefined","window","confirm","result","filter","preventDefault","employeeObject","length","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa01cd8e.chunk.js","sourcesContent":["import { Trash } from \"react-bootstrap-icons\";\n\n\nfunction TableHeader(){\n  return ( \n    <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">First Name</th>\n      <th scope=\"col\">Last Name</th>\n      <th scope=\"col\">Department</th>\n      <th scope=\"col\">Hire Date</th>\n      <th scope=\"col\"></th>\n    </tr>\n  </thead>\n  )\n}\nfunction TablebBody(props){\n  \n\n  const rows = props.tableEmployees.map((employee, index) => {\n  return (\n    \n    <tr key={index}>\n      <th scope=\"row\">{index + 1}</th>\n      <td>{employee.firstname}</td>\n      <td>{employee.lastname}</td>\n      <td>{employee.department}</td>\n      <td>{employee.hiredate}</td>\n      <td><button onClick={props.tableOnDelete} value= {employee.id} className = \"btn btn-primary \"> Delete <Trash/> </button></td>\n    </tr>\n  \n  );\n\n});\nreturn <tbody>{rows}</tbody>;\n}\n\nfunction Data(props) {\n  return (\n    <div className=\"container my-5\">\n     <table className=\"table table-striped\">\n    < TableHeader />\n    < TablebBody \n    tableEmployees = {props.employees}\n    tableOnDelete = {props.onDelete}\n  />\n</table>\n    </div>\n  );\n}\n\nexport default Data;\n","import React from \"react\";\n\n\nfunction Form(props) {\n  return (\n    <div className = \"row\">\n      <div className = \"col-sm-6\">\n    <form onSubmit = {props.onAddEmployee}>\n  <div className=\"mb-3\">\n    <label htmlFor=\"firstname\" className=\"form-label\">First Name</label>\n    <input \n    type=\"text\" \n    name= \"firstname\"\n    className=\"form-control\" \n    id=\"firstname\" \n    value= {props.firstName}\n    onChange= {props.onFirstNameInputChange}/>\n  </div>\n  <div className=\"mb-3\">\n    <label htmlFor=\"lastname\" className=\"form-label\">Last Name</label>\n    <input \n    type=\"text\" \n    name= \"lastname\"\n    className=\"form-control\" \n    id=\"lastname\" \n    value = {props.lastName}\n    onChange= {props.onLastNameInputChange}/>\n  </div>\n  <div className=\"mb-3\">\n    <label htmlFor=\"department\" className=\"form-label\">Department</label>\n    <input \n    type=\"text\" \n    name=\"department\"\n    className=\"form-control\" \n    id=\"department\" \n    value = {props.department}\n    onChange = {props.onDepartmentInputChange}/>\n  </div>\n  <div className=\"mb-3\">\n    <label htmlFor=\"date\" className=\"form-label\">Hire Date</label>\n    <input \n    type=\"date\" \n    name= \"hiredate\"\n    className=\"form-control\" \n    id=\"date\"\n    value= {props.hireDate}\n    onChange= {props.onHireDateInputChange}/>\n  </div>\n  <button type=\"submit\" className=\"btn btn-primary\">Add Record</button>\n</form>\n      </div>\n    </div>\n  );\n}\n\nexport default Form;\n","\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Data from \"./Data\"\nimport Form from \"./Form\"\n\nconst EMPLOYEES_RECORDS = localStorage.getItem(\"employeesdata\")\n? JSON.parse(localStorage.getItem(\"employeesdata\"))\n: [ ];\n\nfunction App() {\n  const [ employees, setEmployees] = useState(EMPLOYEES_RECORDS);\n\n  const [ firstName, setFirstName] = useState(\"\");\n  const [ lastName, setLastName] = useState(\"\");\n  const [ department, setDepartment] = useState(\"\");\n  const [ hireDate, setHireDate] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"employeesdata\", JSON.stringify(employees))\n  }, [employees]);\n\n  const handleFirstNameInputChange = (event)=> {\n    setFirstName(event.target.value);\n  }\n  const handleLastNameInputChange = (event)=> {\n    setLastName(event.target.value);\n  }\n  const handleDepartmentInputChange = (event)=> {\n    setDepartment(event.target.value);\n  }\n  const handleHireDateInputChange = (event)=> {\n    setHireDate(event.target.value);\n  }\n\n  // Add an employee record \n  const addEmployee = (event) => {\n    event.preventDefault();\n\n    const employeeObject = {\n      id: employees.length + 1,\n      firstname: firstName,\n      lastname: lastName,\n      department: department,\n      hiredate: hireDate\n    };\n\n    setEmployees(employees.concat(employeeObject));\n    setFirstName(\"\");\n    setLastName(\"\");\n    setDepartment(\"\");\n    setHireDate(\"\");\n    \n  };\n  \n  //Delete an employee record \n  const deleteEmployee = (event) =>{\n    const id = parseInt(event.target.value, 10)\n    const identity = employees.find(employee => employee.id === id);\n    \n    if( identity !== undefined){\n      const response = window.confirm(`Delete employee ${identity.firstname} ${identity.lastname} record ?`);\n      if(response){\n        const result = employees.filter(employee => employee.id !==id);\n        setEmployees(result);\n      }\n    }\n  };\n\n\n\n  return (\n    <div className=\"container my-5\">\n      <h1 className=\"text-center my-3\">\n        Employee Records\n      </h1>\n        <p className=\"text-center\"> Add an employee data to the employee record table</p>\n        <Data\n        employees={employees}\n        onDelete={deleteEmployee}\n        />\n        <h3>Add New Employee</h3>\n        <Form \n        firstName={firstName}\n        lastName = {lastName}\n        department = {department}\n        hireDate = {hireDate}\n        onFirstNameInputChange = { handleFirstNameInputChange}\n        onLastNameInputChange = { handleLastNameInputChange}\n        onDepartmentInputChange = { handleDepartmentInputChange}\n        onHireDateInputChange = { handleHireDateInputChange}\n        onAddEmployee = {addEmployee}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}